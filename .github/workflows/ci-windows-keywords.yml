name: Run Windows keywords
on: 
  push:
    branches:
    - develop

  workflow_dispatch:
    inputs:
      version:
        description: 'Version'
        required: true
        default: '9.7.0-dev'
        type: string
      
jobs:
  
  manual-trigger-window:
    name: Run Windows keywords on Windows by manual trigger
    
    if: ${{ github.event_name == 'workflow_dispatch'}}
    runs-on: 'windows-latest'
    
    env:
      version: ${{ github.event.inputs.version }}
    
    steps:
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        java-version: 21
        distribution: 'zulu'

    - name: Download Gradle
      uses: suisei-cn/actions-download-file@v1.3.0
      id: gradlefile
      with:
        url: "https://services.gradle.org/distributions/gradle-8.8-all.zip"
        target: C:/Users/public/gradle

    - name: Unzip and setup Gradle
      run: |
        Expand-Archive -LiteralPath "C:/Users/public/gradle/gradle-8.8-all.zip" -DestinationPath "C:/Gradle"
        rm "C:/Users/public/gradle/gradle-8.8-all.zip"
      env:
        GRADLE_HOME: C:\Gradle\gradle-8.8\bin
    
    - name: Change Screen Resolution
      shell: pwsh
      run: |
        Set-DisplayResolution -Width 1920 -Height 1080 -Force

    - name: Parse WinAppDriver version
      id: winappdriver
      run: |
        arch = (Get-WmiObject Win32_OperatingSystem).Caption.Trim()
        if ( $(arch) -match "x86_64"){
          $version="x64"
          echo "version=$version" >> $env:GITHUB_OUTPUT
        }
        elseif ( $(arch) -match "arm64" ){
          $version="arm64"
          echo "version=$version" >> $env:GITHUB_OUTPUT
        }
        else {
          $version="x86"
          echo "version=$version" >> $env:GITHUB_OUTPUT
        }

    - name: Download WinAppDriver
      uses: suisei-cn/actions-download-file@v1.3.0
      id: winappdriverfile
      with:
        url: "https://github.com/microsoft/WinAppDriver/releases/download/v1.2.99/WindowsApplicationDriver-1.2.99-win-${{steps.winappdriver.outputs.version}}.exe"
        target: C:/Users/public

    - name: Install WinAppDriver
      run: |
        if (Test-Path "C:\Program Files (x86)\Windows Application Driver\WinAppDriver.exe") {
          echo "WinAppDriver already installed"
        } else {
          PowerShell -ExecutionPolicy Bypass -NoProfile -File C:/Users/public/WindowsApplicationDriver-1.2.99-win-${{steps.winappdriver.outputs.version}}.exe
        }

    - name: Download sample app test(KSE)
      uses: suisei-cn/actions-download-file@v1.3.0
      id: ksefile
      with:
        url: "https://download.katalon.com/9.6.0/Katalon_Studio_Windows_64-9.6.0.zip"
        target: C:/Users/public
    
    - name: Unzip the sample app test (KSE)
      run: |
        Expand-Archive -LiteralPath "C:/Users/public/Katalon_Studio_Windows_64-9.6.0.zip" -DestinationPath "C:/Users/public/kse"
        rm "C:/Users/public/Katalon_Studio_Windows_64-9.6.0.zip"

    - name: Start WinAppDriver
      shell: cmd
      run: |
        # Start-Process -FilePath "C:\Program Files (x86)\Windows Application Driver\WinAppDriver.exe" -ArgumentList "-port 4723"
        cd C:\Program Files (x86)\Windows Application Driver
        WinAppDriver.exe

    - name: Checkout Keywords repository
      uses: actions/checkout@v4
  
    - name: Install Katalon Gradle dependencies
      run: | 
        cd ${{github.workspace}}
        gradle katalonCopyDependencies
    
    - name: Parse KRE version
      id: kre
      run: |
        $inputVesrion = "${{ github.event.inputs.version }}"
        $versionArray =$inputVesrion.Split("-")
        $version = $versionArray[0]
        echo "version=$version" >> $env:GITHUB_OUTPUT
    
    - name: Download KRE and unzip
      run: |
        $ErrorActionPreference = 'Stop'
        $downloadUrl = "https://download.katalon.com/${{ github.event.inputs.version }}/Katalon_Studio_Engine_Windows_64-${{steps.kre.outputs.version }}.zip"  
        Invoke-WebRequest $downloadUrl -OutFile  "kre.zip"
        unzip kre.zip

    - name: Check for WinAppDriver process
      run: |
        Get-Process | Format-List Name
      
    - name: Running Windows keywords test script
      shell: cmd
      run: |
        set projectPath=%cd%\web-keywords-automation.prj
        cd Katalon_Studio_Engine_Windows_64-${{steps.kre.outputs.version }}
        dir
        katalonc.exe -noSplash -runMode=console -projectPath="%projectPath%" -retry=0 -testSuitePath="Test Suites/Windows Keywords Test" -browserType="Windows" -executionProfile="windows profile" -apiKey="4b2accba-07f7-425d-a371-8a864400fb8d" --config -proxy.auth.option=NO_PROXY -proxy.system.option=NO_PROXY -proxy.system.applyToDesiredCapabilities=true -webui.autoUpdateDrivers=true
        